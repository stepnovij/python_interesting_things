"""
Actually it could be made better, but my goal was just get filling what is memoryview and
how much faster it is than slicing.
"""


def read_file(read_size):
    f = open('some_big_file', 'rb')
    return bytearray(f.read(read_size))

r = read_file(1000000)


def check(input_):
    return input_


def test(x):
    global r
    s = r[:x]
    return s[:len(s)//2]


def test_2(x):
    global r
    mm2 = memoryview(r)[:x]
    return mm2[:len(mm2)//2]


if __name__ == '__main__':
    import timeit
    for x in range(50000, 100001, 1000):
        print('--------------------%i-------------------' % x)
        print(timeit.timeit("test(%i)" % x, setup="from __main__ import test"))
        print(timeit.timeit("test_2(%i)" % x, setup="from __main__ import test_2"))


"""
--------------------0-------------------
0.3726636770006735
0.7458164319978096
--------------------1000-------------------
0.7564423969888594
0.9228001020092051
--------------------2000-------------------
0.812923221004894
0.8124719339830335
--------------------3000-------------------
0.8330105530039873
0.8146331659809221
--------------------4000-------------------
0.8708066650142428
0.9098773539881222
--------------------5000-------------------
0.8710134889988694
0.8444821249868255
--------------------6000-------------------
0.8663712769921403
0.8268834760237951
--------------------7000-------------------
0.9386268309899606
0.8261826620146167
--------------------8000-------------------
0.9906157219957095
0.8381671480019577
--------------------9000-------------------
1.054920583992498
0.8750911020033527
--------------------10000-------------------
1.1506624480243772
0.8369551580108237
--------------------11000-------------------
1.2195567119924817
0.8184756099944934
--------------------12000-------------------
1.2504243069852237
0.8456871429807507
.....
--------------------50000-------------------
4.700606169004459
0.8564351759850979
--------------------51000-------------------
4.644708345003892
0.8131859569984954
--------------------52000-------------------
4.579825961991446
0.8138123799872119
--------------------53000-------------------
4.659992847009562
0.8041517609963194
--------------------54000-------------------
4.810414307983592
0.8132843610073905
"""
